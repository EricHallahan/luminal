Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b, float* c) {
	int loop_e = blockIdx.x;
	float* f = a + (loop_e*262144);
	float* g = c + (512*loop_e);
	int loop_h = blockIdx.y;
	float* i = f + (loop_h*4096);
	float* j = g + (loop_h*8);
	int loop_k = threadIdx.x;
	float* l = i + (512*loop_k);
	float* m = j + loop_k;
	float n[1] = {0.0};
	for (int load = 0; load < 1; ++load) {
		n[0] = *(b + 0);
	}
	for (int loop_o = 0; loop_o < 512; ++loop_o) {
		float* p = l + loop_o;
		float q = *n + *p;
		*n = q;
	}
	*m = *n;
}

Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b, float* c) {
	int loop_e = blockIdx.x;
	float* f = a + (512*loop_e);
	float* g = c + (loop_e*262144);
	int loop_h = blockIdx.y;
	float* i = b + (((loop_h/8)*8)+(loop_h%8));
	float* j = g + (((loop_h/8)*4096)+((loop_h%8)*512));
	int loop_k = threadIdx.x;
	float* l = i + (512*loop_k);
	float* m = f + loop_k;
	float* n = j + loop_k;
	float o = *l * *m;
	*n = o;
}

